{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SURAJGUP\\\\Downloads\\\\kanban project\\\\react-kanban-board-challenge-master\\\\src\\\\components\\\\kanban-board\\\\index.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super(); // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.onInputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.addTask = () => {\n      if (this.state.inputValue) {\n        const _tasks = this.state.tasks;\n\n        _tasks.push({\n          name: this.state.inputValue,\n          stage: 0\n        });\n\n        this.setState({\n          tasks: _tasks,\n          inputValue: ''\n        });\n      }\n    };\n\n    this.back = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          name: task.name,\n          stage: task.stage == 0 ? 0 : task.stage - 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.forward = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          name: task.name,\n          stage: task.stage == 3 ? 3 : task.stage + 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.remove = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.filter(e => e.name != name);\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.state = {\n      tasks: [{\n        name: '1',\n        stage: 0\n      }, {\n        name: '2',\n        stage: 0\n      }],\n      inputValue: ''\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'In Progress', 'Done'];\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    let stagesTasks = [];\n\n    for (let i = 0; i < this.stagesNames.length; ++i) {\n      stagesTasks.push([]);\n    }\n\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-20 layout-column justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"mt-100 layout-row align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.inputValue,\n      onChange: this.onInputChange,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"New task name\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      type: \"submit\",\n      className: \"ml-30\",\n      \"data-testid\": \"create-task-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Create task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-50 layout-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, stagesTasks.map((tasks, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card outlined ml-20 mt-0\",\n        key: `${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, this.stagesNames[i]), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"styled mt-50\",\n        \"data-testid\": `stage-${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, tasks.map((task, index) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"slide-up-fade-in\",\n          key: `${i}${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"li-content layout-row justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.name.split(' ').join('-')}-name`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 27\n          }\n        }, task.name), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.back(task.name),\n          className: \"icon-only x-small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-back`,\n          disabled: task.stage == 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 31\n          }\n        }, \"arrow_back\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.forward(task.name),\n          className: \"icon-only x-small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-forward`,\n          disabled: task.stage == 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 31\n          }\n        }, \"arrow_forward\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.remove(task.name),\n          className: \"icon-only danger x-small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-delete`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 31\n          }\n        }, \"delete\")))));\n      }))));\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/SURAJGUP/Downloads/kanban project/react-kanban-board-challenge-master/src/components/kanban-board/index.js"],"names":["React","Component","KanbanBoard","constructor","onInputChange","e","setState","inputValue","target","value","addTask","state","_tasks","tasks","push","name","stage","back","map","task","forward","remove","filter","stagesNames","render","stagesTasks","i","length","stageId","index","split","join"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\n\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super();\n    // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n    this.state = {\n      tasks: [\n        { name: '1', stage: 0 },\n        { name: '2', stage: 0 },\n      ],\n      inputValue: ''\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'In Progress', 'Done'];\n  }\n\n  onInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n\n  addTask = () => {\n    if (this.state.inputValue) {\n      const _tasks = this.state.tasks;\n      _tasks.push({ name: this.state.inputValue, stage: 0 });\n\n      this.setState({ tasks: _tasks, inputValue: '' });\n    }\n  }\n\n  back = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { name: task.name, stage: task.stage == 0 ? 0 : task.stage - 1 };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  forward = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { name: task.name, stage: task.stage == 3 ? 3 : task.stage + 1 };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  remove = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.filter(e => e.name != name);\n    this.setState({ tasks: _tasks });\n  }\n\n  render() {\n    const { tasks } = this.state;\n\n    let stagesTasks = [];\n    for (let i = 0; i < this.stagesNames.length; ++i) {\n      stagesTasks.push([]);\n    }\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return (\n      <div className=\"mt-20 layout-column justify-content-center align-items-center\">\n        <section className=\"mt-100 layout-row align-items-center justify-content-center\">\n          <input value={this.state.inputValue} onChange={this.onInputChange} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"New task name\" data-testid=\"create-task-input\" />\n          <button onClick={this.addTask} type=\"submit\" className=\"ml-30\" data-testid=\"create-task-button\">Create task</button>\n        </section>\n\n        <div className=\"mt-50 layout-row\">\n          {stagesTasks.map((tasks, i) => {\n            return (\n              <div className=\"card outlined ml-20 mt-0\" key={`${i}`}>\n                <div className=\"card-text\">\n                  <h4>{this.stagesNames[i]}</h4>\n                  <ul className=\"styled mt-50\" data-testid={`stage-${i}`}>\n                    {tasks.map((task, index) => {\n                      return <li className=\"slide-up-fade-in\" key={`${i}${index}`}>\n                        <div className=\"li-content layout-row justify-content-between align-items-center\">\n                          <span data-testid={`${task.name.split(' ').join('-')}-name`}>{task.name}</span>\n                          <div className=\"icons\">\n                            <button onClick={() => this.back(task.name)} className=\"icon-only x-small mx-2\" data-testid={`${task.name.split(' ').join('-')}-back`} disabled={task.stage == 0}>\n                              <i className=\"material-icons\">arrow_back</i>\n                            </button>\n                            <button onClick={() => this.forward(task.name)} className=\"icon-only x-small mx-2\" data-testid={`${task.name.split(' ').join('-')}-forward`} disabled={task.stage == 3}>\n                              <i className=\"material-icons\">arrow_forward</i>\n                            </button>\n                            <button onClick={() => this.remove(task.name)} className=\"icon-only danger x-small mx-2\" data-testid={`${task.name.split(' ').join('-')}-delete`}>\n                              <i className=\"material-icons\">delete</i>\n                            </button>\n                          </div>\n                        </div>\n                      </li>\n                    })}\n                  </ul>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}